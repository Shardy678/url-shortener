services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      # Public base URL your clients will hit
      BASE_URL: "http://localhost:8080"
      # Postgres inside the compose network
      DATABASE_URL: "postgres://shorty:shorty@postgres:5432/shorty?sslmode=disable"
      # Redis inside the compose network
      REDIS_ADDR: "redis:6379"
      # optional
      CACHE_TTL_SECONDS: "86400"
      PORT: "8080"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 3s
      retries: 5

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: shorty
      POSTGRES_PASSWORD: shorty
      POSTGRES_DB: shorty
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/001_init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shorty -d shorty"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 5s

  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 5s

volumes:
  pgdata:
  redisdata:
